Aplikacje napisane z użyciem frameworka Meteor.js mają dość specyficzne wymagania co do serwera na jakim będą uruchomione. Meteor.js oferuję swoją własną implementacje MongoDB. Jednak do celów produkcyjnych nie jest wskazane wykorzystanie tego rozwiązania. Z tego powodu hosting musi posiadać normalną wersję bazy MongoDB. Jedynym gotowym takim rozwiązaniem jest hosting z wykorzystaniem rozwiązania oferowanego przez twórców Meteor.js. Drugą opcja to serwer współdzielony, bądź dedykowany, na którym mielibyśmy pełną kontrolę. Jako system operacyjny najlepiej oraz najtaniej jest wykorzystać, którąś z popularnych dystrybucji Linuxa. Najlepsze efekty można uzyskać oddzielając aplikację od bazy. Do tego celu można wykorzystać wirtualizację z wykorzystaniem Dockera\footnote{Otwarte oprogramowanie służące jako „platforma dla programistów i administratorów do tworzenia, wdrażania i uruchamiania aplikacji rozproszonych”. Docker jest określany jako narzędzie, które pozwala umieścić program oraz jego zależności w lekkim, przenośnym, wirtualnym kontenerze, który można uruchomić na prawie każdym serwerze z systemem Linux}, który wykorzystuje tzw kontenery. 

Pierwszym etapem wdrożenia była instalacja aplikacji z wykorzystaniem rozwiązania oferowanego przez twórców frameworka. Hosting ten nie oferuje zbyt dużej wydajności, aplikacje po określonym czasie są usypiane i potrzebują około 60 sekund na ponowne uruchomienie. Przez małą wydajność doskonale sprawdza się jako platforma testowa co do optymalizacji aplikacji oraz działania w środowisku dużych opóźnień pomiędzy serwerem a klientami. Hosting aplikacji jest darmowy, jednak wymaga rejestracji darmowego konta,  a do stawiania aplikacji wykorzystuje się gotowe, dostarczane przez framework rozwiązanie. W celu wgrania aplikacji na serwer używamy polecenia \verb|meteor deploy| uruchamianym w głównym katalogu aplikacji. Listing \ref{lst:meteor_deploy} pokazuje użycie tego polecenia. 
\begin{bash}[caption={Wgranie aplikacji na serwer},label={lst:meteor_deploy}]
meteor deploy intranet.yp2.meteor.com --settings server/config/serverConfig.json
\end{bash}
Jako parametr obowiązkowy musimy przekazać pod domenę pod jaką ma działać aplikacja. 


